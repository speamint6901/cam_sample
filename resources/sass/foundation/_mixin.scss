@import "mixins/mediaqueries";
@import "mixins/typography";
@import "mixins/layout";

//******************************* Prefix /
@mixin prefix($property, $value) {
 @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
  #{$prefix}#{$property}: $value;
 }
}

//******************************* breakpoints
@mixin MQ($canvas) {
 @if $canvas == S {
  @media only screen and (max-width: $BreakPoint-S) { @content; }
 }
 @else if $canvas == M {
  @media only screen and (max-width: $BreakPoint-M) { @content; }
 }
 @else if $canvas == L {
  @media only screen and (max-width: $BreakPoint-L) { @content; }
 }
 @else if $canvas == maxL {
  @media only screen and (min-width: $BreakPoint-maxL) { @content; }
 }
}


//******************************* common /
@mixin common_radius {  border-radius: 4px; }





//==================== opacity（不透明度）IE対策
@mixin opacity($opacity) {
 opacity: $opacity;
 filter: alpha(opacity=($opacity * 100));
}
//ex. @include opacity(0.5);




//横幅を px → % へ変換して指定する
@mixin widtnPercent( $parentPxWidth, $pxWidth ){
 width: floor((( $pxWidth / $parentPxWidth ) * 10000% )) / 100;
}
//ex.@include widtnPercent(960, 300);
